//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.04.04 at 09:59:23 AM EEST 
//


package gr.interamerican.bo2.hbm.meta.beans;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the gr.interamerican.bo2.impl.hbm.meta.beans package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: gr.interamerican.bo2.impl.hbm.meta.beans
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link HibernateMapping }
     * 
     */
    public HibernateMapping createHibernateMapping() {
        return new HibernateMapping();
    }

    /**
     * Create an instance of {@link Clazz }
     * 
     */
    public Clazz createClazz() {
        return new Clazz();
    }

    /**
     * Create an instance of {@link Typedef }
     * 
     */
    public Typedef createTypedef() {
        return new Typedef();
    }

    /**
     * Create an instance of {@link Import }
     * 
     */
    public Import createImport() {
        return new Import();
    }

    /**
     * Create an instance of {@link CompositeId }
     * 
     */
    public CompositeId createCompositeId() {
        return new CompositeId();
    }

    /**
     * Create an instance of {@link ManyToOne }
     * 
     */
    public ManyToOne createManyToOne() {
        return new ManyToOne();
    }

    /**
     * Create an instance of {@link OneToOne }
     * 
     */
    public OneToOne createOneToOne() {
        return new OneToOne();
    }

    /**
     * Create an instance of {@link KeyManyToOne }
     * 
     */
    public KeyManyToOne createKeyManyToOne() {
        return new KeyManyToOne();
    }

    /**
     * Create an instance of {@link MetaValue }
     * 
     */
    public MetaValue createMetaValue() {
        return new MetaValue();
    }

    /**
     * Create an instance of {@link Component }
     * 
     */
    public Component createComponent() {
        return new Component();
    }

    /**
     * Create an instance of {@link OneToMany }
     * 
     */
    public OneToMany createOneToMany() {
        return new OneToMany();
    }

    /**
     * Create an instance of {@link ManyToMany }
     * 
     */
    public ManyToMany createManyToMany() {
        return new ManyToMany();
    }

    /**
     * Create an instance of {@link CompositeElement }
     * 
     */
    public CompositeElement createCompositeElement() {
        return new CompositeElement();
    }

    /**
     * Create an instance of {@link NestedCompositeElement }
     * 
     */
    public NestedCompositeElement createNestedCompositeElement() {
        return new NestedCompositeElement();
    }

    /**
     * Create an instance of {@link MapKeyManyToMany }
     * 
     */
    public MapKeyManyToMany createMapKeyManyToMany() {
        return new MapKeyManyToMany();
    }

    /**
     * Create an instance of {@link IndexManyToMany }
     * 
     */
    public IndexManyToMany createIndexManyToMany() {
        return new IndexManyToMany();
    }

    /**
     * Create an instance of {@link CompositeMapKey }
     * 
     */
    public CompositeMapKey createCompositeMapKey() {
        return new CompositeMapKey();
    }

    /**
     * Create an instance of {@link CompositeIndex }
     * 
     */
    public CompositeIndex createCompositeIndex() {
        return new CompositeIndex();
    }

    /**
     * Create an instance of {@link Generator }
     * 
     */
    public Generator createGenerator() {
        return new Generator();
    }

    /**
     * Create an instance of {@link Return }
     * 
     */
    public Return createReturn() {
        return new Return();
    }

    /**
     * Create an instance of {@link Id }
     * 
     */
    public Id createId() {
        return new Id();
    }

    /**
     * Create an instance of {@link ListIndex }
     * 
     */
    public ListIndex createListIndex() {
        return new ListIndex();
    }

    /**
     * Create an instance of {@link KeyProperty }
     * 
     */
    public KeyProperty createKeyProperty() {
        return new KeyProperty();
    }

    /**
     * Create an instance of {@link Key }
     * 
     */
    public Key createKey() {
        return new Key();
    }

    /**
     * Create an instance of {@link Index }
     * 
     */
    public Index createIndex() {
        return new Index();
    }

    /**
     * Create an instance of {@link CollectionId }
     * 
     */
    public CollectionId createCollectionId() {
        return new CollectionId();
    }

    /**
     * Create an instance of {@link Any }
     * 
     */
    public Any createAny() {
        return new Any();
    }

    /**
     * Create an instance of {@link ManyToAny }
     * 
     */
    public ManyToAny createManyToAny() {
        return new ManyToAny();
    }

    /**
     * Create an instance of {@link IndexManyToAny }
     * 
     */
    public IndexManyToAny createIndexManyToAny() {
        return new IndexManyToAny();
    }

    /**
     * Create an instance of {@link Tuplizer }
     * 
     */
    public Tuplizer createTuplizer() {
        return new Tuplizer();
    }

    /**
     * Create an instance of {@link Definition }
     * 
     */
    public Definition createDefinition() {
        return new Definition();
    }

    /**
     * Create an instance of {@link Version }
     * 
     */
    public Version createVersion() {
        return new Version();
    }

    /**
     * Create an instance of {@link JoinedSubclass }
     * 
     */
    public JoinedSubclass createJoinedSubclass() {
        return new JoinedSubclass();
    }

    /**
     * Create an instance of {@link Map }
     * 
     */
    public Map createMap() {
        return new Map();
    }

    /**
     * Create an instance of {@link Set }
     * 
     */
    public Set createSet() {
        return new Set();
    }

    /**
     * Create an instance of {@link List }
     * 
     */
    public List createList() {
        return new List();
    }

    /**
     * Create an instance of {@link Bag }
     * 
     */
    public Bag createBag() {
        return new Bag();
    }

    /**
     * Create an instance of {@link Idbag }
     * 
     */
    public Idbag createIdbag() {
        return new Idbag();
    }

    /**
     * Create an instance of {@link Array }
     * 
     */
    public Array createArray() {
        return new Array();
    }

    /**
     * Create an instance of {@link PrimitiveArray }
     * 
     */
    public PrimitiveArray createPrimitiveArray() {
        return new PrimitiveArray();
    }

    /**
     * Create an instance of {@link Join }
     * 
     */
    public Join createJoin() {
        return new Join();
    }

    /**
     * Create an instance of {@link UnionSubclass }
     * 
     */
    public UnionSubclass createUnionSubclass() {
        return new UnionSubclass();
    }

    /**
     * Create an instance of {@link Property }
     * 
     */
    public Property createProperty() {
        return new Property();
    }

    /**
     * Create an instance of {@link Element }
     * 
     */
    public Element createElement() {
        return new Element();
    }

    /**
     * Create an instance of {@link MapKey }
     * 
     */
    public MapKey createMapKey() {
        return new MapKey();
    }

    /**
     * Create an instance of {@link Drop }
     * 
     */
    public Drop createDrop() {
        return new Drop();
    }

    /**
     * Create an instance of {@link Meta }
     * 
     */
    public Meta createMeta() {
        return new Meta();
    }

    /**
     * Create an instance of {@link Column }
     * 
     */
    public Column createColumn() {
        return new Column();
    }

    /**
     * Create an instance of {@link Formula }
     * 
     */
    public Formula createFormula() {
        return new Formula();
    }

    /**
     * Create an instance of {@link Filter }
     * 
     */
    public Filter createFilter() {
        return new Filter();
    }

    /**
     * Create an instance of {@link Parent }
     * 
     */
    public Parent createParent() {
        return new Parent();
    }

    /**
     * Create an instance of {@link Type }
     * 
     */
    public Type createType() {
        return new Type();
    }

    /**
     * Create an instance of {@link Param }
     * 
     */
    public Param createParam() {
        return new Param();
    }

    /**
     * Create an instance of {@link Cache }
     * 
     */
    public Cache createCache() {
        return new Cache();
    }

    /**
     * Create an instance of {@link Synchronize }
     * 
     */
    public Synchronize createSynchronize() {
        return new Synchronize();
    }

    /**
     * Create an instance of {@link Loader }
     * 
     */
    public Loader createLoader() {
        return new Loader();
    }

    /**
     * Create an instance of {@link SqlInsert }
     * 
     */
    public SqlInsert createSqlInsert() {
        return new SqlInsert();
    }

    /**
     * Create an instance of {@link SqlUpdate }
     * 
     */
    public SqlUpdate createSqlUpdate() {
        return new SqlUpdate();
    }

    /**
     * Create an instance of {@link SqlDelete }
     * 
     */
    public SqlDelete createSqlDelete() {
        return new SqlDelete();
    }

    /**
     * Create an instance of {@link SqlDeleteAll }
     * 
     */
    public SqlDeleteAll createSqlDeleteAll() {
        return new SqlDeleteAll();
    }

    /**
     * Create an instance of {@link DatabaseObject }
     * 
     */
    public DatabaseObject createDatabaseObject() {
        return new DatabaseObject();
    }

    /**
     * Create an instance of {@link Create }
     * 
     */
    public Create createCreate() {
        return new Create();
    }

    /**
     * Create an instance of {@link DialectScope }
     * 
     */
    public DialectScope createDialectScope() {
        return new DialectScope();
    }

    /**
     * Create an instance of {@link IdentifierGenerator }
     * 
     */
    public IdentifierGenerator createIdentifierGenerator() {
        return new IdentifierGenerator();
    }

    /**
     * Create an instance of {@link DynamicComponent }
     * 
     */
    public DynamicComponent createDynamicComponent() {
        return new DynamicComponent();
    }

    /**
     * Create an instance of {@link FilterDef }
     * 
     */
    public FilterDef createFilterDef() {
        return new FilterDef();
    }

    /**
     * Create an instance of {@link Subclass }
     * 
     */
    public Subclass createSubclass() {
        return new Subclass();
    }

    /**
     * Create an instance of {@link Resultset }
     * 
     */
    public Resultset createResultset() {
        return new Resultset();
    }

    /**
     * Create an instance of {@link Query }
     * 
     */
    public Query createQuery() {
        return new Query();
    }

    /**
     * Create an instance of {@link SqlQuery }
     * 
     */
    public SqlQuery createSqlQuery() {
        return new SqlQuery();
    }

    /**
     * Create an instance of {@link FetchProfile }
     * 
     */
    public FetchProfile createFetchProfile() {
        return new FetchProfile();
    }

    /**
     * Create an instance of {@link ReturnProperty }
     * 
     */
    public ReturnProperty createReturnProperty() {
        return new ReturnProperty();
    }

    /**
     * Create an instance of {@link ReturnColumn }
     * 
     */
    public ReturnColumn createReturnColumn() {
        return new ReturnColumn();
    }

    /**
     * Create an instance of {@link Fetch }
     * 
     */
    public Fetch createFetch() {
        return new Fetch();
    }

    /**
     * Create an instance of {@link Discriminator }
     * 
     */
    public Discriminator createDiscriminator() {
        return new Discriminator();
    }

    /**
     * Create an instance of {@link NaturalId }
     * 
     */
    public NaturalId createNaturalId() {
        return new NaturalId();
    }

    /**
     * Create an instance of {@link Timestamp }
     * 
     */
    public Timestamp createTimestamp() {
        return new Timestamp();
    }

    /**
     * Create an instance of {@link Properties }
     * 
     */
    public Properties createProperties() {
        return new Properties();
    }

    /**
     * Create an instance of {@link ReturnJoin }
     * 
     */
    public ReturnJoin createReturnJoin() {
        return new ReturnJoin();
    }

    /**
     * Create an instance of {@link ReturnDiscriminator }
     * 
     */
    public ReturnDiscriminator createReturnDiscriminator() {
        return new ReturnDiscriminator();
    }

    /**
     * Create an instance of {@link ReturnScalar }
     * 
     */
    public ReturnScalar createReturnScalar() {
        return new ReturnScalar();
    }

    /**
     * Create an instance of {@link LoadCollection }
     * 
     */
    public LoadCollection createLoadCollection() {
        return new LoadCollection();
    }

    /**
     * Create an instance of {@link FilterParam }
     * 
     */
    public FilterParam createFilterParam() {
        return new FilterParam();
    }

    /**
     * Create an instance of {@link QueryParam }
     * 
     */
    public QueryParam createQueryParam() {
        return new QueryParam();
    }

}
